@page "{id:int?}"
@model IndexModel
@{
    ViewData["Title"] = "Class Information System";
}

@* I got help from ai for the bootstrap style here *@

@section Styles {
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.8.1/font/bootstrap-icons.css">
    <style>
        body {
            background-color: #fff0f5;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }
        .form-container, .table-container {
            background-color: white;
            padding: 25px;
            border-radius: 15px;
            box-shadow: 0 5px 15px rgba(0,0,0,0.05);
            margin-bottom: 20px;
        }
        h2 {
            color: #d63384;
            margin-bottom: 25px;
        }
        .btn-primary {
            background-color: #ff69b4;
            border-color: #ff69b4;
        }
        .btn-warning {
            background-color: #ff85a2;
            border-color: #ff85a2;
        }
        .form-control:focus {
            border-color: #ff69b4;
            box-shadow: 0 0 0 0.25rem rgba(255, 105, 180, 0.25);
        }
    </style>
}

<div class="container mt-4">
    <div class="row">
    
        <div class="col-md-6">
            <div class="form-container">
                <h2>@(Model.EditId == 0 ? "Add Class" : "Edit Class")</h2>
                <form method="post">
                    <input type="hidden" asp-for="EditId" />
                    
                    <div class="form-group mb-3">
                        <label asp-for="NewClass.ClassName" class="form-label">Class Name</label>
                        <input asp-for="NewClass.ClassName" class="form-control" />
                        <span asp-validation-for="NewClass.ClassName" class="text-danger"></span>
                    </div>
                    
                    <div class="form-group mb-3">
                        <label asp-for="NewClass.StudentCount" class="form-label">Student Count</label>
                        <input asp-for="NewClass.StudentCount" class="form-control" />
                        <span asp-validation-for="NewClass.StudentCount" class="text-danger"></span>
                    </div>
                    
                    <div class="form-group mb-3">
                        <label asp-for="NewClass.Description" class="form-label">Description</label>
                        <textarea asp-for="NewClass.Description" class="form-control" rows="3"></textarea>
                        <span asp-validation-for="NewClass.Description" class="text-danger"></span>
                    </div>
                    
                    <div class="form-group">
                        @if (Model.EditId == 0)
                        {
                            <button type="submit" asp-page-handler="Add" class="btn btn-primary">
                                <i class="bi bi-plus-circle"></i> Add Class
                            </button>
                        }
                        else
                        {
                            <button type="submit" asp-page-handler="Edit" class="btn btn-warning">
                                <i class="bi bi-pencil-square"></i> Update
                            </button>
                            <a asp-page="./Index" class="btn btn-secondary">
                                <i class="bi bi-x-circle"></i> Cancel
                            </a>
                        }
                    </div>
                </form>
            </div>
        </div>
        
 
        <div class="col-md-6">
    <div class="table-container">
        <h2>Class List</h2>


        <form method="get" class="mb-4">
            <div class="row g-3">
                <div class="col-md-5">
                    <input asp-for="ClassNameFilter" class="form-control" placeholder="Class name..." />
                </div>
                <div class="col-md-5">
                    <input asp-for="MinStudentCount" type="number" class="form-control" placeholder="Min students" />
                </div>
                <div class="col-md-2">
                    <button type="submit" class="btn btn-primary w-100">Filter</button>
                </div>
            </div>
        </form>

        @if (Model.PaginatedClasses.Any())
        {
            <table class="table table-striped table-hover">
                <thead>
                    <tr>
                        <th>Class Name</th>
                        <th>Students</th>
                        <th>Description</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model.PaginatedClasses)
                    {
                        <tr>
                            <td>@item.ClassName</td>
                            <td>@item.StudentCount</td>
                            <td>@item.Description</td>
                            <td>
                                <a asp-page="./Index" asp-route-id="@item.Id" 
                                   asp-route-classNameFilter="@Model.ClassNameFilter"
                                   asp-route-minStudentCount="@Model.MinStudentCount"
                                   class="btn btn-sm btn-info me-2">
                                    <i class="bi bi-pencil"></i>
                                </a>
                                <form method="post" class="d-inline">
                                    <input type="hidden" name="id" value="@item.Id" />
                                    <button type="submit" asp-page-handler="Delete" class="btn btn-sm btn-danger">
                                        <i class="bi bi-trash"></i>
                                    </button>
                                </form>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>

     
           <nav aria-label="Page navigation">
    <ul class="pagination flex-wrap">
        
        <li class="page-item @(!Model.PaginatedClasses.HasPreviousPage ? "disabled" : "")">
            <a class="page-link" 
               asp-route-pageIndex="@(Model.PaginatedClasses.PageIndex - 1)"
               asp-route-classNameFilter="@Model.ClassNameFilter"
               asp-route-minStudentCount="@Model.MinStudentCount">
                &laquo; Previous
            </a>
        </li>
        
@*I got help from AI to make sure the pages are numbered correctly. *@
        @{
            int startPage = Math.Max(1, Model.PaginatedClasses.PageIndex - 2);
            int endPage = Math.Min(Model.PaginatedClasses.TotalPages, Model.PaginatedClasses.PageIndex + 2);
        }
        
        @if (startPage > 1)
        {
            <li class="page-item">
                <a class="page-link" 
                   asp-route-pageIndex="1"
                   asp-route-classNameFilter="@Model.ClassNameFilter"
                   asp-route-minStudentCount="@Model.MinStudentCount">1</a>
            </li>
            @if (startPage > 2)
            {
                <li class="page-item disabled">
                    <span class="page-link">...</span>
                </li>
            }
        }
        
        @for (int i = startPage; i <= endPage; i++)
        {
            <li class="page-item @(i == Model.PaginatedClasses.PageIndex ? "active" : "")">
                <a class="page-link" 
                   asp-route-pageIndex="@i"
                   asp-route-classNameFilter="@Model.ClassNameFilter"
                   asp-route-minStudentCount="@Model.MinStudentCount">@i</a>
            </li>
        }
        
        @if (endPage < Model.PaginatedClasses.TotalPages)
        {
            @if (endPage < Model.PaginatedClasses.TotalPages - 1)
            {
                <li class="page-item disabled">
                    <span class="page-link">...</span>
                </li>
            }
            <li class="page-item">
                <a class="page-link" 
                   asp-route-pageIndex="@Model.PaginatedClasses.TotalPages"
                   asp-route-classNameFilter="@Model.ClassNameFilter"
                   asp-route-minStudentCount="@Model.MinStudentCount">
                   @Model.PaginatedClasses.TotalPages
                </a>
            </li>
        }
        
        <li class="page-item @(!Model.PaginatedClasses.HasNextPage ? "disabled" : "")">
            <a class="page-link" 
               asp-route-pageIndex="@(Model.PaginatedClasses.PageIndex + 1)"
               asp-route-classNameFilter="@Model.ClassNameFilter"
               asp-route-minStudentCount="@Model.MinStudentCount">
               Next &raquo;
            </a>
        </li>
    </ul>
</nav>

<style>
 
 @* I got help from AI for custom style settings *@
    .pagination {
        overflow-x: auto;
        white-space: nowrap;
        flex-wrap: wrap; 
    }
    
    .page-item {
        display: inline-block; 
    }
    
    .page-link {
        min-width: 40px;
        text-align: center;
    }
    
    @@media (max-width: 768px) {
        .pagination {
            justify-content: center;
        }
        .page-item {
            margin: 1px;
        }
    }
</style>
        }
        else
        {
            <div class="alert alert-info">
                <i class="bi bi-info-circle"></i> No classes found matching your criteria.
            </div>
        }
    </div>
</div>


@section Scripts {
    <partial name="_ValidationScriptsPartial" />
}